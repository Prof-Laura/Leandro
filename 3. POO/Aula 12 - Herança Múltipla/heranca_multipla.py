# -*- coding: utf-8 -*-
"""heranca_multipla.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1c7o6kk53aUSLpPH_WygzrcNJM8PtX1dn
"""

# Classe base/pai: Pessoa
class Pessoa:
  def __init__(self, nome, **kwargs):
    self.nome = nome
    print(f"Pessoa: {self.nome} foi criada")
    super().__init__(**kwargs) # Chama a próxima classe do MRO (caso exista)

  def quem_sou(self):
    print(f'Sou {self.nome}, uma pessoa')

# Classe que herda de Pessoa
class Aluno(Pessoa):
  def __init__(self, escola, **kwargs):
    self.escola = escola
    print(f'Aluno: Estudando na {self.escola}')
    super().__init__(**kwargs) # Chama Pessoa.__init__ e continua o MRO

class Funcionario(Pessoa):
  def __init__(self, empresa, **kwargs):
    self.empresa = empresa
    print(f'Funcionário: Trabalhando na {self.empresa}')
    super().__init__(**kwargs) # Chama Pessoa.__init__ e continua o MRO

# Herança Múltipla: AlunoFuncionario herda de Aluno e de Funcionario
class AlunoFuncionario(Aluno, Funcionario):
  def __init__(self, nome, escola, empresa):
    print(f'AlunoFuncionario: Criando {nome}')
    super().__init__(nome=nome, escola=escola, empresa=empresa) # Vai seguir o MRO: Aluno -> Funcionario -> Pessoa

  def quem_sou(self):
    print(f'Sou {self.nome}, estudo na {self.escola} e trabalho na {self.empresa}')
    super().quem_sou() # Segue o MRO para complementar a descrição

# Criar o objeto
print("=== Criando o João ===")
joao = AlunoFuncionario("João", "USP", "Google")

print("Identidade do João")
joao.quem_sou()

print("MRO")
print([cls.__name__ for cls in AlunoFuncionario.__mro__])

# AlunoFuncionario Funcionario Aluno Pessoa
# Joao: AlunoFuncionario -> Aluno -> Funcionario -> Pessoa